/**
 * AS24 API v4.1
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package abtlibrary.utils.as24ApiClient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * MyListingVehicle
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-21T15:07:04.675+07:00")
public class MyListingVehicle   {
  @SerializedName("price")
  private Double price = null;

  @SerializedName("km")
  private Integer km = null;

  @SerializedName("teaser")
  private String teaser = null;

  @SerializedName("comments")
  private String comments = null;

  public MyListingVehicle price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }

  public MyListingVehicle km(Integer km) {
    this.km = km;
    return this;
  }

   /**
   * Get km
   * @return km
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getKm() {
    return km;
  }

  public void setKm(Integer km) {
    this.km = km;
  }

  public MyListingVehicle teaser(String teaser) {
    this.teaser = teaser;
    return this;
  }

   /**
   * Get teaser
   * @return teaser
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTeaser() {
    return teaser;
  }

  public void setTeaser(String teaser) {
    this.teaser = teaser;
  }

  public MyListingVehicle comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MyListingVehicle myListingVehicle = (MyListingVehicle) o;
    return Objects.equals(this.price, myListingVehicle.price) &&
        Objects.equals(this.km, myListingVehicle.km) &&
        Objects.equals(this.teaser, myListingVehicle.teaser) &&
        Objects.equals(this.comments, myListingVehicle.comments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, km, teaser, comments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MyListingVehicle {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    km: ").append(toIndentedString(km)).append("\n");
    sb.append("    teaser: ").append(toIndentedString(teaser)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


/**
 * AS24 API v4.1
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package abtlibrary.utils.as24ApiClient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * NewVehicle
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-21T15:07:04.675+07:00")
public class NewVehicle   {
  @SerializedName("id")
  private Integer id = null;

  /**
   * Gets or Sets vehicleType
   */
  public enum VehicleTypeEnum {
    @SerializedName("0")
    NUMBER_0(0),
    
    @SerializedName("10")
    NUMBER_10(10),
    
    @SerializedName("20")
    NUMBER_20(20),
    
    @SerializedName("30")
    NUMBER_30(30),
    
    @SerializedName("60")
    NUMBER_60(60),
    
    @SerializedName("70")
    NUMBER_70(70),
    
    @SerializedName("80")
    NUMBER_80(80);

    private Integer value;

    VehicleTypeEnum(Integer value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("vehicleType")
  private VehicleTypeEnum vehicleType = null;

  @SerializedName("makeId")
  private Integer makeId = null;

  @SerializedName("modelId")
  private Integer modelId = null;

  @SerializedName("makeName")
  private String makeName = null;

  @SerializedName("modelName")
  private String modelName = null;

  @SerializedName("importBegin")
  private Integer importBegin = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("kw")
  private Double kw = null;

  @SerializedName("hp")
  private Double hp = null;

  @SerializedName("doors")
  private Integer doors = null;

  @SerializedName("technicalCapacity")
  private Double technicalCapacity = null;

  @SerializedName("seats")
  private Integer seats = null;

  @SerializedName("length")
  private Integer length = null;

  @SerializedName("width")
  private Integer width = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("wheelbase")
  private Integer wheelbase = null;

  @SerializedName("weightKerb")
  private Integer weightKerb = null;

  @SerializedName("consumptionRating")
  private String consumptionRating = null;

  @SerializedName("segmentation")
  private String segmentation = null;

  @SerializedName("fuelType")
  private String fuelType = null;

  @SerializedName("bodyType")
  private String bodyType = null;

  @SerializedName("transmissionType")
  private String transmissionType = null;

  @SerializedName("driveType")
  private String driveType = null;

  @SerializedName("price1")
  private Double price1 = null;

  @SerializedName("licenseCategory")
  private String licenseCategory = null;

  @SerializedName("consumptionTotal")
  private Double consumptionTotal = null;

  @SerializedName("co2Emission")
  private Integer co2Emission = null;

  @SerializedName("payLoad")
  private Integer payLoad = null;

  @SerializedName("importBeginYear")
  private Integer importBeginYear = null;

  @SerializedName("importBeginMonth")
  private Integer importBeginMonth = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get vehicleType
   * @return vehicleType
  **/
  @ApiModelProperty(example = "null", value = "")
  public VehicleTypeEnum getVehicleType() {
    return vehicleType;
  }

   /**
   * Get makeId
   * @return makeId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getMakeId() {
    return makeId;
  }

   /**
   * Get modelId
   * @return modelId
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getModelId() {
    return modelId;
  }

   /**
   * Get makeName
   * @return makeName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getMakeName() {
    return makeName;
  }

   /**
   * Get modelName
   * @return modelName
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getModelName() {
    return modelName;
  }

   /**
   * Get importBegin
   * @return importBegin
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getImportBegin() {
    return importBegin;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

   /**
   * Get kw
   * @return kw
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getKw() {
    return kw;
  }

   /**
   * Get hp
   * @return hp
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getHp() {
    return hp;
  }

   /**
   * Get doors
   * @return doors
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDoors() {
    return doors;
  }

   /**
   * Get technicalCapacity
   * @return technicalCapacity
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getTechnicalCapacity() {
    return technicalCapacity;
  }

   /**
   * Get seats
   * @return seats
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSeats() {
    return seats;
  }

   /**
   * Get length
   * @return length
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getLength() {
    return length;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWidth() {
    return width;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getHeight() {
    return height;
  }

   /**
   * Get wheelbase
   * @return wheelbase
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWheelbase() {
    return wheelbase;
  }

   /**
   * Get weightKerb
   * @return weightKerb
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWeightKerb() {
    return weightKerb;
  }

   /**
   * Get consumptionRating
   * @return consumptionRating
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getConsumptionRating() {
    return consumptionRating;
  }

   /**
   * Get segmentation
   * @return segmentation
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getSegmentation() {
    return segmentation;
  }

   /**
   * Get fuelType
   * @return fuelType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getFuelType() {
    return fuelType;
  }

   /**
   * Get bodyType
   * @return bodyType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getBodyType() {
    return bodyType;
  }

   /**
   * Get transmissionType
   * @return transmissionType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getTransmissionType() {
    return transmissionType;
  }

   /**
   * Get driveType
   * @return driveType
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getDriveType() {
    return driveType;
  }

   /**
   * Get price1
   * @return price1
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getPrice1() {
    return price1;
  }

   /**
   * Get licenseCategory
   * @return licenseCategory
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getLicenseCategory() {
    return licenseCategory;
  }

   /**
   * Get consumptionTotal
   * @return consumptionTotal
  **/
  @ApiModelProperty(example = "null", value = "")
  public Double getConsumptionTotal() {
    return consumptionTotal;
  }

   /**
   * Get co2Emission
   * @return co2Emission
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getCo2Emission() {
    return co2Emission;
  }

   /**
   * Get payLoad
   * @return payLoad
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getPayLoad() {
    return payLoad;
  }

   /**
   * Get importBeginYear
   * @return importBeginYear
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getImportBeginYear() {
    return importBeginYear;
  }

   /**
   * Get importBeginMonth
   * @return importBeginMonth
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getImportBeginMonth() {
    return importBeginMonth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewVehicle newVehicle = (NewVehicle) o;
    return Objects.equals(this.id, newVehicle.id) &&
        Objects.equals(this.vehicleType, newVehicle.vehicleType) &&
        Objects.equals(this.makeId, newVehicle.makeId) &&
        Objects.equals(this.modelId, newVehicle.modelId) &&
        Objects.equals(this.makeName, newVehicle.makeName) &&
        Objects.equals(this.modelName, newVehicle.modelName) &&
        Objects.equals(this.importBegin, newVehicle.importBegin) &&
        Objects.equals(this.name, newVehicle.name) &&
        Objects.equals(this.kw, newVehicle.kw) &&
        Objects.equals(this.hp, newVehicle.hp) &&
        Objects.equals(this.doors, newVehicle.doors) &&
        Objects.equals(this.technicalCapacity, newVehicle.technicalCapacity) &&
        Objects.equals(this.seats, newVehicle.seats) &&
        Objects.equals(this.length, newVehicle.length) &&
        Objects.equals(this.width, newVehicle.width) &&
        Objects.equals(this.height, newVehicle.height) &&
        Objects.equals(this.wheelbase, newVehicle.wheelbase) &&
        Objects.equals(this.weightKerb, newVehicle.weightKerb) &&
        Objects.equals(this.consumptionRating, newVehicle.consumptionRating) &&
        Objects.equals(this.segmentation, newVehicle.segmentation) &&
        Objects.equals(this.fuelType, newVehicle.fuelType) &&
        Objects.equals(this.bodyType, newVehicle.bodyType) &&
        Objects.equals(this.transmissionType, newVehicle.transmissionType) &&
        Objects.equals(this.driveType, newVehicle.driveType) &&
        Objects.equals(this.price1, newVehicle.price1) &&
        Objects.equals(this.licenseCategory, newVehicle.licenseCategory) &&
        Objects.equals(this.consumptionTotal, newVehicle.consumptionTotal) &&
        Objects.equals(this.co2Emission, newVehicle.co2Emission) &&
        Objects.equals(this.payLoad, newVehicle.payLoad) &&
        Objects.equals(this.importBeginYear, newVehicle.importBeginYear) &&
        Objects.equals(this.importBeginMonth, newVehicle.importBeginMonth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, vehicleType, makeId, modelId, makeName, modelName, importBegin, name, kw, hp, doors, technicalCapacity, seats, length, width, height, wheelbase, weightKerb, consumptionRating, segmentation, fuelType, bodyType, transmissionType, driveType, price1, licenseCategory, consumptionTotal, co2Emission, payLoad, importBeginYear, importBeginMonth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewVehicle {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    vehicleType: ").append(toIndentedString(vehicleType)).append("\n");
    sb.append("    makeId: ").append(toIndentedString(makeId)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    makeName: ").append(toIndentedString(makeName)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    importBegin: ").append(toIndentedString(importBegin)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    kw: ").append(toIndentedString(kw)).append("\n");
    sb.append("    hp: ").append(toIndentedString(hp)).append("\n");
    sb.append("    doors: ").append(toIndentedString(doors)).append("\n");
    sb.append("    technicalCapacity: ").append(toIndentedString(technicalCapacity)).append("\n");
    sb.append("    seats: ").append(toIndentedString(seats)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    wheelbase: ").append(toIndentedString(wheelbase)).append("\n");
    sb.append("    weightKerb: ").append(toIndentedString(weightKerb)).append("\n");
    sb.append("    consumptionRating: ").append(toIndentedString(consumptionRating)).append("\n");
    sb.append("    segmentation: ").append(toIndentedString(segmentation)).append("\n");
    sb.append("    fuelType: ").append(toIndentedString(fuelType)).append("\n");
    sb.append("    bodyType: ").append(toIndentedString(bodyType)).append("\n");
    sb.append("    transmissionType: ").append(toIndentedString(transmissionType)).append("\n");
    sb.append("    driveType: ").append(toIndentedString(driveType)).append("\n");
    sb.append("    price1: ").append(toIndentedString(price1)).append("\n");
    sb.append("    licenseCategory: ").append(toIndentedString(licenseCategory)).append("\n");
    sb.append("    consumptionTotal: ").append(toIndentedString(consumptionTotal)).append("\n");
    sb.append("    co2Emission: ").append(toIndentedString(co2Emission)).append("\n");
    sb.append("    payLoad: ").append(toIndentedString(payLoad)).append("\n");
    sb.append("    importBeginYear: ").append(toIndentedString(importBeginYear)).append("\n");
    sb.append("    importBeginMonth: ").append(toIndentedString(importBeginMonth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}


/**
 * AS24 API v4.1
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package abtlibrary.utils.as24ApiClient.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import abtlibrary.utils.as24ApiClient.model.Parameter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;


/**
 * MasterData
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-12-21T15:07:04.675+07:00")
public class MasterData   {
  @SerializedName("parameters")
  private Map<String, Parameter> parameters = new HashMap<String, Parameter>();

  @SerializedName("imageHost")
  private String imageHost = null;

  @SerializedName("imageSettings")
  private List<String> imageSettings = new ArrayList<String>();

  @SerializedName("dateModified")
  private DateTime dateModified = null;

  public MasterData parameters(Map<String, Parameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public MasterData putParametersItem(String key, Parameter parametersItem) {
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Parameter> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Parameter> parameters) {
    this.parameters = parameters;
  }

   /**
   * Get imageHost
   * @return imageHost
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getImageHost() {
    return imageHost;
  }

  public MasterData imageSettings(List<String> imageSettings) {
    this.imageSettings = imageSettings;
    return this;
  }

  public MasterData addImageSettingsItem(String imageSettingsItem) {
    this.imageSettings.add(imageSettingsItem);
    return this;
  }

   /**
   * Get imageSettings
   * @return imageSettings
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<String> getImageSettings() {
    return imageSettings;
  }

  public void setImageSettings(List<String> imageSettings) {
    this.imageSettings = imageSettings;
  }

  public MasterData dateModified(DateTime dateModified) {
    this.dateModified = dateModified;
    return this;
  }

   /**
   * Get dateModified
   * @return dateModified
  **/
  @ApiModelProperty(example = "null", value = "")
  public DateTime getDateModified() {
    return dateModified;
  }

  public void setDateModified(DateTime dateModified) {
    this.dateModified = dateModified;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MasterData masterData = (MasterData) o;
    return Objects.equals(this.parameters, masterData.parameters) &&
        Objects.equals(this.imageHost, masterData.imageHost) &&
        Objects.equals(this.imageSettings, masterData.imageSettings) &&
        Objects.equals(this.dateModified, masterData.dateModified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(parameters, imageHost, imageSettings, dateModified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MasterData {\n");
    
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    imageHost: ").append(toIndentedString(imageHost)).append("\n");
    sb.append("    imageSettings: ").append(toIndentedString(imageSettings)).append("\n");
    sb.append("    dateModified: ").append(toIndentedString(dateModified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

